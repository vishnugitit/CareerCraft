/*=============== GOOGLE FONTS ===============*/
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap");

/*=============== VARIABLES CSS ===============*/
* {
  box-sizing: border-box;
}
:root {
  --header-height: 3rem;

  /*========== Colors ==========*/
  /*Color mode HSL(hue, saturation, lightness)*/
  --hue: 0;
  --sat: 0%;
  --title-color: hsl(var(--hue), var(--sat), 20%);
  --title-color-dark: hsl(var(--hue), var(--sat), 0%);
  --text-color: hsl(var(--hue), var(--sat), 46%);
  --body-color: hsl(var(--hue), var(--sat), 98%);
  --container-color: #fff;
  --btn-color: white;
  --border-layout: 1px solid rgba(0, 0, 0, 0.1);
  --border-background: #fff;

  --heading-text: #111827;

  --content-text: #1f2937;

  --subcontent-text: #4b5563;

  /* Additional */
  --nav-bg: #f4f4f4;
  --button-bg: #ffff;
  --education-icon: orange;
  --links-text: #3b82f6;
  --links-button: #2d2d2d;

  /*========== Font and typography ==========*/
  --body-font: "Poppins", sans-serif;

  /*.5rem = 8px | 1rem = 16px ...*/
  --big-font-size: 3.5rem;
  --h1-font-size: 2.25rem;
  --h2-font-size: 1.5rem;
  --h3-font-size: 1.25rem;
  --normal-font-size: 1rem;
  --small-font-size: 0.875rem;
  --smaller-font-size: 0.813rem;
  --tiny-font-size: 0.625rem;

  /*========== Font weight ==========*/
  --font-normal: 400;
  --font-medium: 500;
  --font-semi-bold: 600;

  /*========== Margenes Bottom ==========*/
  /*.5rem = 8px | 1rem = 16px ...*/
  --mb-0-25: 0.25rem;
  --mb-0-5: 0.5rem;
  --mb-0-75: 0.75rem;
  --mb-1: 1rem;
  --mb-1-5: 1.5rem;
  --mb-2: 2rem;
  --mb-2-5: 2.5rem;
  --mb-3: 3rem;

  /*========== z index ==========*/
  --z-tooltip: 10;
  --z-fixed: 100;
  --z-modal: 1000;
}

/* Dark Theme */
.dark-theme {
  /* dark-mode background */
  background-color: #121212;

  /* boxes border */
  --border-layout: 1px solid #333333;
  /* boxes background */
  --border-background: rgba(0, 0, 0, 0.5);

  /* Text color */
  color: #f5f5f5;

  /* Additional */
  --nav-bg: #1f1f1f;
  --button-bg: #333333;

  /* Colors */
  --title-color: #fff;
  /* --title-color: red; */
  --title-color-dark: #ffff;
  /* Live preview / write me/ Testnomial buttons/ line/ mode button text */
  --text-color: #b0b0b0;
  /*Header Background  */
  --body-color: #1e1e1e;

  /* Talk to me section / footer/ button text */
  --container-color: #121212;

  --btn-color: white;
  --education-icon: yellow;
  --heading-text: #f5f5f5;
  --content-text: #e0e0e0;
  --subcontent-text: #b0b0b0;
}

body {
  background-color: var(--bg-color);
  color: var(--text-color);
  transition: #121212 0.3s ease, color 0.3s ease;
}

.theme-toggle {
  padding: 8px 16px;
  border-radius: 6px;
  border: var(--border-layout);
  background-color: var(--button-bg);
  color: var(--text-color);
  cursor: pointer;
}

/* Responsive typography */
@media screen and (max-width: 992px) {
  :root {
    --big-font-size: 2.75rem;
    --h1-font-size: 1.5rem;
    --h2-font-size: 1.25rem;
    --h3-font-size: 1rem;
    --normal-font-size: 0.938rem;
    --small-font-size: 0.813rem;
    --smaller-font-size: 0.75rem;
  }
}

/*=============== BASE ===============*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body,
button,
input,
textarea {
  font-family: var(--body-font);
  font-size: var(--normal-font-size);
}

body {
  background-color: var(--body-color);
  color: var(--text-color);
}

h1,
h2,
h3 {
  color: var(--title-color);
  font-weight: var(--font-semi-bold);
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
}

button {
  cursor: pointer;
  border: none;
  outline: none;
}

img {
  max-width: 100%;
  height: auto;
}

/*=============== REUSABLE CSS CLASSES ===============*/
.section {
  padding: 6rem 0 2rem;
}

.section__title {
  font-size: var(--h1-font-size);
  color: var(--heading-text);
}

.section__subtitle {
  display: block;
  font-size: var(--small-font-size);
  margin-bottom: 4rem;
  color: var(--content-text);
}

.section__title,
.section__subtitle {
  text-align: center;
}

/*=============== LAYOUT ===============*/
.container {
  max-width: 968px;
  margin-left: auto;
  margin-right: auto;
}

.grid {
  display: grid;
  gap: 1.5rem;
}

/*=============== BUTTONS ===============*/
.button {
  display: inline-block;
  background-color: var(--title-color);
  color: var(--container-color);
  padding: 1.25rem 2rem;
  border-radius: 1rem;
  font-weight: var(--font-medium);
}

.button:hover {
  background-color: var(--title-color-dark);
}

.button__icon {
  margin-left: var(--mb-0-5);
}

.button--flex {
  display: inline-flex;
  align-items: center;
}

/*=============== BREAKPOINTS ===============*/
/* For large devices */
@media screen and (max-width: 992px) {
  .container {
    margin-left: var(--mb-1-5);
    margin-right: var(--mb-1-5);
  }

  .button {
    padding: 1rem 1.75rem;
  }

  .button__icon {
    width: 22px;
    height: 22px;
  }
}

/* For medium devices */
@media screen and (max-width: 768px) {
  body {
    margin: 0 0 var(--header-height) 0;
  }

  .section {
    padding: 2rem 0 4rem;
  }

  .section__subtitle {
    margin-bottom: var(--mb-3);
  }
}

@media screen and (max-width: 576px) {
}

/* For small devices */
@media screen and (max-width: 350px) {
  :root {
    --big-font-size: 2.25rem;
  }

  .container {
    margin-left: var(--mb-1);
    margin-right: var(--mb-1);
  }
}

/* ===========================
   GLOBAL RESPONSIVE + SCROLL FIX
   =========================== */

/* -------------------------------
   GLOBAL LAYOUT + SMOOTH SCROLL
---------------------------------*/

/* Reset + viewport fit */

/* ============================
   RESPONSIVE FIXES — SITE WIDE
   Paste at end of App.css / index.css
   ============================ */

/* =====================================
   GLOBAL FIXED HEADER + RESPONSIVE LAYOUT
   ===================================== */

/* --------------------------
   GLOBAL SAFETY + NAV FIXES
   Paste into index.css / App.css
   -------------------------- */

/* ====== Targeted overflow/flex fixes (do NOT change layout) ====== */

/* 1) Normal box model */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 2) Keep page layout intact — no global flex on html/body */
html,
body,
#root {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  max-width: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  scroll-behavior: smooth;
  /* clip is safer than hidden — it visually clips overflow without interfering
     with anchor/navigation in most modern browsers */
  overflow-x: clip;
}

/* 3) Contain common offending elements without changing layout behavior */
.site-container,
.container,
.app-container,
.nav-container {
  width: 100%;
  max-width: 1200px; /* keep your design width */
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

/* 4) Important: when a parent is display:flex, children MUST be allowed to shrink
   to avoid forcing horizontal overflow. This fixes many Bootstrap/grid/row issues. */
.flex,
.d-flex,
.row,
.card-grid,
.card,
main,
section,
.page-section,
.container > * {
  min-width: 0; /* allow flex children to shrink below their content width */
}

/* 5) Images / media / sliders — never exceed their container */
img,
picture,
svg,
video,
iframe,
.swiper,
.swiper-slide {
  max-width: 100%;
  height: auto;
  display: block;
}

/* 6) Replace any use of 100vw on full-bleed elements (100vw causes overflow when scrollbars present).
   Prefer 100% and add this helper class to full-width blocks if needed. */
.full-bleed,
.hero-full {
  width: 100%;
  max-width: none;
}

/* 7) If you use elements with explicit width:100vw in libraries, neutralize them safely: */
*[style*="100vw"],
.force-100pct {
  width: 100% !important;
  max-width: 100% !important;
}

/* 8) Mobile menu overlay safety (keep hover/click working; no layout shifts) */
.mobile-menu {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  transform: translateY(-6%);
  opacity: 0;
  pointer-events: none;
  transition: transform 0.22s ease, opacity 0.18s ease;
  z-index: 2000;
  padding: 4.5rem 1rem 2rem;
}
.mobile-menu.open {
  transform: none;
  opacity: 1;
  pointer-events: auto;
}

/* 9) Debug helper — toggle body.debug to visualize any oversize element (remove after debug) */
body.debug * {
  outline: 1px dashed rgba(255, 0, 0, 0.08);
}

/* ====== end targeted fixes ====== */

/* ========== GLOBAL SPACING BELOW NAVBAR ========== */







/*  Get Started Section*/

/* ===========================
   PORTABLE FIX: Remove small/medium gaps + responsive safety
   Paste this at the end of your main stylesheet (App.css / index.css)
   =========================== */

/* ---------- Ensure root background variable is defined and consistent ---------- */
:root {
  /* Make sure there's always a fallback bg variable used by body */
  --bg-color: var(--body-color, #ffffff);
}

/* ---------- Global reset consistency (no duplicate margin surprises) ---------- */
html, body, #root {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  min-height: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overflow-x: hidden; /* safer than clip for older browsers */
  box-sizing: border-box;
}

/* Make sure all elements inherit the border-box model */
*, *::before, *::after {
  box-sizing: border-box;
}

/* ---------- Use the correct body background & remove margins that caused gaps ---------- */
body {
  background-color: var(--bg-color);
  color: var(--text-color);
  line-height: 1.4;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* REMOVE any bottom margin added for small screens (override) */
  margin: 0 !important;
  padding: 0;
}

/* ---------- If you have a fixed header, reserve space without creating page gap ----------
   Use a content wrapper (recommended class: .app-container or main). This avoids
   adding margins to <body> which caused your gap on small/medium screens.
*/
.app-container,
.main-content,
main {
  min-height: calc(100vh - var(--header-height));
  /* allow content to grow beyond viewport when needed */
  display: block;
}

/* If header is not fixed, this calc is still safe (it will just be slightly smaller) */

/* ---------- Safe bottom spacing for content (instead of body margin) ----------
   Use this when you have a sticky/fixed bottom element (like mobile nav).
   Add .space-for-footer to the main wrapper only when a fixed footer exists.
*/
.space-for-footer {
  padding-bottom: var(--header-height); /* reuse header height or set a custom var */
}

/* ---------- Prevent unintended horizontal overflow (common cause of gaps) ---------- */
.container,
.site-container,
.app-container {
  width: 100%;
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
  overflow: visible; /* allow dropdowns, but avoid forcing layout width */
  min-width: 0; /* important for flex children shrinking */
}

/* Neutralize any library or component that uses 100vw (causes horizontal scroll) */
*[style*="100vw"],
.force-100pct {
  width: 100% !important;
  max-width: 100% !important;
}

/* ---------- Sections: avoid extra bottom gaps on small screens ---------- */
.section {
  padding-top: 3.5rem;   /* leave a little breathing room from header */
  padding-bottom: 2rem;  /* keep bottom consistent on all screens */
}

/* If you use sections as the first element after header, ensure no double-gap */
.header + .section,
nav + .section {
  padding-top: calc(1.2rem + var(--header-height));
}

/* ---------- Mobile specific fixes (override problematic rules) ---------- */
@media screen and (max-width: 768px) {
  /* remove any earlier rule that set body margin for small screens */
  body {
    margin: 0 !important;
  }

  /* Make containers slightly tighter for small screens */
  .container {
    padding-left: 0.875rem;
    padding-right: 0.875rem;
  }

  /* Ensure header reserve doesn't push content out of viewport */
  .app-container,
  main {
    min-height: calc(100vh - var(--header-height));
  }

  /* Reduce section top spacing on very small devices to remove visible gaps */
  .section {
    padding-top: calc(0.75rem + var(--header-height));
    padding-bottom: 1.5rem;
  }
}

/* Very small screens */
@media screen and (max-width: 420px) {
  .section {
    padding-top: calc(0.5rem + var(--header-height));
    padding-bottom: 1rem;
  }

  .container {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }
}

/* ---------- Mobile menu safety (no layout jumps) ---------- */
.mobile-menu {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  transform: translateY(-6%);
  opacity: 0;
  pointer-events: none;
  transition: transform 0.22s ease, opacity 0.18s ease;
  z-index: 2000;
  padding: calc(var(--header-height) + 1rem) 1rem 2rem; /* ensure menu doesn't push content */
}
.mobile-menu.open {
  transform: none;
  opacity: 1;
  pointer-events: auto;
}

/* ---------- Debug helper (optional) ----------
   Toggle body.debug while inspecting layout; remove in production
*/
body.debug * { outline: 1px dashed rgba(0,0,0,0.06); }

/* ---------- Quick checklist (for you) ----------
   1) Remove or comment-out any older rule that does:
        body { margin: 0 0 var(--header-height) 0; }
      — that exact line was the likely cause of the extra vertical gap.
   2) Apply .app-container (or main) around your site content if not present:
        <div class="app-container"> ... all page sections ... </div>
   3) If you have a fixed header, keep it height-synced with --header-height.
   4) If you still see a gap, check for any element near the top using margin-top (eg: h1)
      — sometimes the first child margin collapses. If so, add .section { padding-top: 0.125rem; }
*/

/* End of responsive gap-fix patch */
